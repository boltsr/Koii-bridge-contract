/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "KoiRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KoiRouter__factory>;
    getContractFactory(
      name: "KoiToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KoiToken__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC1155Meta",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Meta__factory>;
    getContractFactory(
      name: "IERC1155Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Metadata__factory>;
    getContractFactory(
      name: "IERC1155MintBurn",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MintBurn__factory>;
    getContractFactory(
      name: "IERC1155TokenReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155TokenReceiver__factory>;
    getContractFactory(
      name: "IERC1271Wallet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1271Wallet__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155__factory>;
    getContractFactory(
      name: "ERC1155Meta",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Meta__factory>;
    getContractFactory(
      name: "ERC1155Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Metadata__factory>;
    getContractFactory(
      name: "ERC1155MintBurn",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155MintBurn__factory>;
    getContractFactory(
      name: "SignatureValidator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SignatureValidator__factory>;
    getContractFactory(
      name: "ERC1155Tradable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Tradable__factory>;
    getContractFactory(
      name: "ProxyRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProxyRegistry__factory>;
    getContractFactory(
      name: "MockProxyRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockProxyRegistry__factory>;

    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "KoiRouter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.KoiRouter>;
    getContractAt(
      name: "KoiToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.KoiToken>;
    getContractAt(
      name: "IERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155>;
    getContractAt(
      name: "IERC1155Meta",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Meta>;
    getContractAt(
      name: "IERC1155Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Metadata>;
    getContractAt(
      name: "IERC1155MintBurn",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155MintBurn>;
    getContractAt(
      name: "IERC1155TokenReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155TokenReceiver>;
    getContractAt(
      name: "IERC1271Wallet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1271Wallet>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155>;
    getContractAt(
      name: "ERC1155Meta",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Meta>;
    getContractAt(
      name: "ERC1155Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Metadata>;
    getContractAt(
      name: "ERC1155MintBurn",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155MintBurn>;
    getContractAt(
      name: "SignatureValidator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SignatureValidator>;
    getContractAt(
      name: "ERC1155Tradable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Tradable>;
    getContractAt(
      name: "ProxyRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ProxyRegistry>;
    getContractAt(
      name: "MockProxyRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockProxyRegistry>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
