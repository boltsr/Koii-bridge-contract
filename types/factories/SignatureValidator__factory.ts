/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SignatureValidator,
  SignatureValidatorInterface,
} from "../SignatureValidator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_signerAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_sig",
        type: "bytes",
      },
    ],
    name: "isValidSignature",
    outputs: [
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b44806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063fa4e12d714610030575b600080fd5b61004361003e366004610647565b610059565b6040516100509190610792565b60405180910390f35b6000808251116100845760405162461bcd60e51b815260040161007b906109d3565b60405180910390fd5b6001600160a01b0385166100aa5760405162461bcd60e51b815260040161007b90610976565b60006100b583610500565b60f81c9050600581106100da5760405162461bcd60e51b815260040161007b9061085f565b60008160ff1660058111156100ff57634e487b7160e01b600052602160045260246000fd5b905060008080808085600581111561012757634e487b7160e01b600052602160045260246000fd5b14156101455760405162461bcd60e51b815260040161007b906108bc565b600185600581111561016757634e487b7160e01b600052602160045260246000fd5b141561024557875160611461018e5760405162461bcd60e51b815260040161007b90610919565b610199886000610583565b92506101a6886020610583565b9150876040815181106101c957634e487b7160e01b600052603260045260246000fd5b602001015160f81c60f81b60f81c935060018a858585604051600081526020016040526040516101fc94939291906107b6565b6020604051602081039080840390855afa15801561021e573d6000803e3d6000fd5b5050604051601f1901516001600160a01b038d811691161497506104f89650505050505050565b600285600581111561026757634e487b7160e01b600052602160045260246000fd5b141561032257875160611461028e5760405162461bcd60e51b815260040161007b90610919565b610299886000610583565b92506102a6886020610583565b9150876040815181106102c957634e487b7160e01b600052603260045260246000fd5b602001015160f81c60f81b60f81c935060018a6040516020016102ec9190610761565b60405160208183030381529060405280519060200120858585604051600081526020016040526040516101fc94939291906107b6565b600385600581111561034457634e487b7160e01b600052602160045260246000fd5b1415610401576040516320c13b0b60e01b81526001600160a01b038c16906320c13b0b90610378908c908c906004016107d4565b60206040518083038186803b15801561039057600080fd5b505afa1580156103a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c891906106cf565b7fffffffff00000000000000000000000000000000000000000000000000000000166320c13b0b60e01b1496506104f895505050505050565b600485600581111561042357634e487b7160e01b600052602160045260246000fd5b14156104e057604051630b135d3f60e11b81526001600160a01b038c1690631626ba7e90610457908d908c9060040161079d565b60206040518083038186803b15801561046f57600080fd5b505afa158015610483573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a791906106cf565b7fffffffff0000000000000000000000000000000000000000000000000000000016630b135d3f60e11b1496506104f895505050505050565b60405162461bcd60e51b815260040161007b9061085f565b949350505050565b6000808251116105225760405162461bcd60e51b815260040161007b90610802565b81600183516105319190610acb565b8151811061054f57634e487b7160e01b600052603260045260246000fd5b0160200151825160001901909252507fff000000000000000000000000000000000000000000000000000000000000001690565b6000610590826020610ab3565b835110156105b05760405162461bcd60e51b815260040161007b90610a56565b6105bb602083610ab3565b929092015192915050565b600082601f8301126105d6578081fd5b813567ffffffffffffffff808211156105f1576105f1610af8565b604051601f8301601f19168101602001828111828210171561061557610615610af8565b60405282815284830160200186101561062c578384fd5b82602086016020830137918201602001929092529392505050565b6000806000806080858703121561065c578384fd5b84356001600160a01b0381168114610672578485fd5b935060208501359250604085013567ffffffffffffffff80821115610695578384fd5b6106a1888389016105c6565b935060608701359150808211156106b6578283fd5b506106c3878288016105c6565b91505092959194509250565b6000602082840312156106e0578081fd5b81517fffffffff000000000000000000000000000000000000000000000000000000008116811461070f578182fd5b9392505050565b60008151808452815b8181101561073b5760208185018101518683018201520161071f565b8181111561074c5782602083870101525b50601f01601f19169290920160200192915050565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c810191909152603c0190565b901515815260200190565b6000838252604060208301526104f86040830184610716565b93845260ff9290921660208401526040830152606082015260800190565b6000604082526107e76040830185610716565b82810360208401526107f98185610716565b95945050505050565b60208082526037908201527f4c6962427974657323706f704c617374427974653a20475245415445525f544860408201527f414e5f5a45524f5f4c454e4754485f5245515549524544000000000000000000606082015260800190565b6020808252603a908201527f5369676e617475726556616c696461746f7223697356616c69645369676e617460408201527f7572653a20554e535550504f525445445f5349474e4154555245000000000000606082015260800190565b60208082526036908201527f5369676e617475726556616c696461746f7223697356616c69645369676e617460408201527f7572653a20494c4c4547414c5f5349474e415455524500000000000000000000606082015260800190565b60208082526037908201527f5369676e617475726556616c696461746f7223697356616c69645369676e617460408201527f7572653a204c454e4754485f39375f5245515549524544000000000000000000606082015260800190565b60208082526033908201527f5369676e617475726556616c696461746f7223697356616c69645369676e617460408201527f7572653a20494e56414c49445f5349474e455200000000000000000000000000606082015260800190565b60208082526043908201527f5369676e617475726556616c696461746f7223697356616c69645369676e617460408201527f7572653a204c454e4754485f475245415445525f5448414e5f305f524551554960608201527f5245440000000000000000000000000000000000000000000000000000000000608082015260a00190565b6020808252603c908201527f4c696242797465732372656164427974657333323a20475245415445525f4f5260408201527f5f455155414c5f544f5f33325f4c454e4754485f524551554952454400000000606082015260800190565b60008219821115610ac657610ac6610ae2565b500190565b600082821015610add57610add610ae2565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220ab6d04c03bd7842266072faf9d138a18540b12a4aac8ea9e66d8578b610c990f64736f6c63430008000033";

export class SignatureValidator__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SignatureValidator> {
    return super.deploy(overrides || {}) as Promise<SignatureValidator>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SignatureValidator {
    return super.attach(address) as SignatureValidator;
  }
  connect(signer: Signer): SignatureValidator__factory {
    return super.connect(signer) as SignatureValidator__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SignatureValidatorInterface {
    return new utils.Interface(_abi) as SignatureValidatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SignatureValidator {
    return new Contract(address, _abi, signerOrProvider) as SignatureValidator;
  }
}
